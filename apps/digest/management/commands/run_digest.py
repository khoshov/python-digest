"""
Django –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π.
"""

from django.core.management.base import BaseCommand, CommandError
from apps.digest.services.pipeline_runner import run_pipeline_for_project
from apps.digest.models import Project


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            '--project-id',
            type=int,
            help='ID –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–µ–∫—Ç)',
        )
        parser.add_argument(
            '--list-projects',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤',
        )

    def handle(self, *args, **options):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        if options['list_projects']:
            self.stdout.write(self.style.SUCCESS('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤:'))
            projects = Project.objects.all().order_by('-is_active', 'name')

            if not projects:
                self.stdout.write(self.style.WARNING('  –ü—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É.'))
                return

            for project in projects:
                status = '‚úÖ –ê–ö–¢–ò–í–ù–´–ô' if project.is_active else '‚ùå –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π'
                self.stdout.write(f'  [{project.id}] {project.name} - {status}')
            return

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞–π–ø–ª–∞–π–Ω
        project_id = options.get('project_id')

        try:
            self.stdout.write(self.style.SUCCESS('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞...'))

            result = run_pipeline_for_project(project_id)

            if result['success']:
                self.stdout.write(
                    self.style.SUCCESS(
                        f"\n‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n"
                        f"   –ü—Ä–æ–µ–∫—Ç: {result['project']}\n"
                        f"   –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {result['total_posts']}"
                    )
                )
            else:
                self.stdout.write(
                    self.style.ERROR(
                        f"\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞!\n"
                        f"   –ü—Ä–æ–µ–∫—Ç: {result['project']}\n"
                        f"   –û—à–∏–±–∫–∞: {result['error']}"
                    )
                )
                raise CommandError(result['error'])

        except ValueError as e:
            raise CommandError(str(e))
        except Exception as e:
            raise CommandError(f'–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}')
